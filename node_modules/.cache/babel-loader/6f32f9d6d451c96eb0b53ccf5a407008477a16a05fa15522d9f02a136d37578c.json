{"ast":null,"code":"var _jsxFileName = \"/home/aakriti/Documents/countDown/countdown/src/Countdown.jsx\",\n  _s = $RefreshSig$();\n// CountdownTimer.jsx\nimport React, { useState, useEffect } from 'react';\nimport './CountdownTimer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countdown = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (timerRunning) {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [timerRunning]);\n  const handleStart = () => {\n    setTimerRunning(true);\n  };\n  const handlePause = () => {\n    setTimerRunning(false);\n  };\n  const handleStop = () => {\n    setTimerRunning(false);\n    setTime(0);\n  };\n  const handleTimeChange = event => {\n    const newTime = parseInt(event.target.value, 10);\n    setTime(newTime);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"countdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Set Time (seconds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: time,\n          onChange: handleTimeChange,\n          disabled: timerRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        disabled: timerRunning,\n        children: \"Start Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePause,\n        disabled: !timerRunning,\n        children: \"Pause Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStop,\n        children: \"Stop Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Countdown, \"VZ1BlkZac2u9wVpEl10ysO7XjXc=\");\n_c = Countdown;\nconst formatTime = seconds => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\n};\nexport default Countdown;\nvar _c;\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Countdown","_s","time","setTime","timerRunning","setTimerRunning","interval","setInterval","prevTime","clearInterval","handleStart","handlePause","handleStop","handleTimeChange","event","newTime","parseInt","target","value","className","children","formatTime","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","disabled","onClick","_c","seconds","minutes","Math","floor","remainingSeconds","String","padStart","$RefreshReg$"],"sources":["/home/aakriti/Documents/countDown/countdown/src/Countdown.jsx"],"sourcesContent":["// CountdownTimer.jsx\nimport React, { useState, useEffect } from 'react';\nimport './CountdownTimer.css';\n\nconst Countdown = () => {\n  const [time, setTime] = useState(0);\n  const [timerRunning, setTimerRunning] = useState(false);\n\n  useEffect(() => {\n    let interval;\n\n    if (timerRunning) {\n      interval = setInterval(() => {\n        setTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [timerRunning]);\n\n  const handleStart = () => {\n    setTimerRunning(true);\n  };\n\n  const handlePause = () => {\n    setTimerRunning(false);\n  };\n\n  const handleStop = () => {\n    setTimerRunning(false);\n    setTime(0);\n  };\n\n  const handleTimeChange = (event) => {\n    const newTime = parseInt(event.target.value, 10);\n    setTime(newTime);\n  };\n\n  return (\n    <div className=\"countdown-container\">\n      <div className=\"timer\">{formatTime(time)}</div>\n      <div className=\"controls\">\n        <label>\n          Set Time (seconds):\n          <input\n            type=\"number\"\n            value={time}\n            onChange={handleTimeChange}\n            disabled={timerRunning}\n          />\n        </label>\n        <button onClick={handleStart} disabled={timerRunning}>\n          Start Timer\n        </button>\n        <button onClick={handlePause} disabled={!timerRunning}>\n          Pause Timer\n        </button>\n        <button onClick={handleStop}>Stop Timer</button>\n      </div>\n    </div>\n  );\n};\n\nconst formatTime = (seconds) => {\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\n};\n\nexport default Countdown;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}